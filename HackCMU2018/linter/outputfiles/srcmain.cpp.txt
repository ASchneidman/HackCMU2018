118
2, 15, 16, 16, 17, 17, 19, 20, 21, 23, 23, 24, 24, 24, 25, 25, 26, 26, 27, 28, 29, 31, 31, 32, 32, 32, 33, 33, 34, 34, 35, 36, 37, 39, 39, 40, 40, 40, 41, 41, 42, 42, 43, 44, 45, 47, 47, 48, 48, 48, 49, 49, 50, 50, 51, 52, 53, 55, 55, 56, 56, 56, 57, 57, 58, 58, 59, 60, 61, 63, 63, 64, 64, 64, 65, 65, 66, 66, 67, 68, 69, 71, 71, 72, 72, 72, 73, 73, 74, 74, 75, 76, 77, 79, 79, 80, 80, 80, 81, 81, 82, 82, 83, 84, 85, 87, 87, 88, 88, 88, 89, 89, 90, 90, 91, 92, 93, 95
#include <iostream>
#include <sys/time.h>

#include "ArrayAccessor.hpp"
#include "VerifySort.hpp"
#include "Benchmark.hpp"
#include "Sort.hpp"

#define countof(x) (sizeof(x) / sizeof(x[0]))

char message[] = "WDCEFAJILOPVRGHQSBUKNXZMTY";
char message_sorted[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

int main(void)
{
	using namespace tsl;
	unsigned long count = 100000;

	ArrayAccessor<char> arrayAccessor(message, countof(message) - 1);
	ArrayAccessor<char> sortedArray(message_sorted, countof(message_sorted) - 1);
	struct timeval delta;

	if (VerifySort<ArrayAccessor<char> >::verify(BubbleSort<ArrayAccessor<char> >::sort, arrayAccessor, sortedArray, arrayAccessor.size()))
	{
		Benchmark<ArrayAccessor<char> >::benchmark(BubbleSort<ArrayAccessor<char> >::sort, &delta, count, arrayAccessor, arrayAccessor.size());
		printf("%d iterations of BubbleSort took %f seconds\n", count, delta.tv_sec + (delta.tv_usec) / 1000000.0);
	} else {
		printf("BubbleSort fails\n");
	}

	if (VerifySort<ArrayAccessor<char> >::verify(CocktailSort<ArrayAccessor<char> >::sort, arrayAccessor, sortedArray, arrayAccessor.size()))
	{
		Benchmark<ArrayAccessor<char> >::benchmark(CocktailSort<ArrayAccessor<char> >::sort, &delta, count, arrayAccessor, arrayAccessor.size());
		printf("%d iterations of CocktailSort took %f seconds\n", count, delta.tv_sec + (delta.tv_usec) / 1000000.0);
	} else {
		printf("CocktailSort fails\n");
	}

	if (VerifySort<ArrayAccessor<char> >::verify(CombSort<ArrayAccessor<char> >::sort, arrayAccessor, sortedArray, arrayAccessor.size()))
	{
		Benchmark<ArrayAccessor<char> >::benchmark(CombSort<ArrayAccessor<char> >::sort, &delta, count, arrayAccessor, arrayAccessor.size());
		printf("%d iterations of CombSort took %f seconds\n", count, delta.tv_sec + (delta.tv_usec) / 1000000.0);
	} else {
		printf("CombSort fails\n");
	}

	if (VerifySort<ArrayAccessor<char> >::verify(GnomeSort<ArrayAccessor<char> >::sort, arrayAccessor, sortedArray, arrayAccessor.size()))
	{
		Benchmark<ArrayAccessor<char> >::benchmark(GnomeSort<ArrayAccessor<char> >::sort, &delta, count, arrayAccessor, arrayAccessor.size());
		printf("%d iterations of GnomeSort took %f seconds\n", count, delta.tv_sec + (delta.tv_usec) / 1000000.0);
	} else {
		printf("GnomeSort fails\n");
	}

	if (VerifySort<ArrayAccessor<char> >::verify(InsertionSort<ArrayAccessor<char> >::sort, arrayAccessor, sortedArray, arrayAccessor.size()))
	{
		Benchmark<ArrayAccessor<char> >::benchmark(InsertionSort<ArrayAccessor<char> >::sort, &delta, count, arrayAccessor, arrayAccessor.size());
		printf("%d iterations of InsertionSort took %f seconds\n", count, delta.tv_sec + (delta.tv_usec) / 1000000.0);
	} else {
		printf("InsertionSort fails\n");
	}

	if (VerifySort<ArrayAccessor<char> >::verify(MergeSort<ArrayAccessor<char> >::sort, arrayAccessor, sortedArray, arrayAccessor.size()))
	{
		Benchmark<ArrayAccessor<char> >::benchmark(MergeSort<ArrayAccessor<char> >::sort, &delta, count, arrayAccessor, arrayAccessor.size());
		printf("%d iterations of MergeSort took %f seconds\n", count, delta.tv_sec + (delta.tv_usec) / 1000000.0);
	} else {
		printf("MergeSort fails\n");
	}

	if (VerifySort<ArrayAccessor<char> >::verify(QuickSort<ArrayAccessor<char> >::sort, arrayAccessor, sortedArray, arrayAccessor.size()))
	{
		Benchmark<ArrayAccessor<char> >::benchmark(QuickSort<ArrayAccessor<char> >::sort, &delta, count, arrayAccessor, arrayAccessor.size());
		printf("%d iterations of QuickSort took %f seconds\n", count, delta.tv_sec + (delta.tv_usec) / 1000000.0);
	} else {
		printf("QuickSort fails\n");
	}

	if (VerifySort<ArrayAccessor<char> >::verify(SelectionSort<ArrayAccessor<char> >::sort, arrayAccessor, sortedArray, arrayAccessor.size()))
	{
		Benchmark<ArrayAccessor<char> >::benchmark(SelectionSort<ArrayAccessor<char> >::sort, &delta, count, arrayAccessor, arrayAccessor.size());
		printf("%d iterations of SelectionSort took %f seconds\n", count, delta.tv_sec + (delta.tv_usec) / 1000000.0);
	} else {
		printf("SelectionSort fails\n");
	}

	if (VerifySort<ArrayAccessor<char> >::verify(ShellSort<ArrayAccessor<char> >::sort, arrayAccessor, sortedArray, arrayAccessor.size()))
	{
		Benchmark<ArrayAccessor<char> >::benchmark(ShellSort<ArrayAccessor<char> >::sort, &delta, count, arrayAccessor, arrayAccessor.size());
		printf("%d iterations of ShellSort took %f seconds\n", count, delta.tv_sec + (delta.tv_usec) / 1000000.0);
	} else {
		printf("ShellSort fails\n");
	}

	return 0;
}
