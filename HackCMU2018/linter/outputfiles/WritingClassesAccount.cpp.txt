60
1, 5, 10, 11, 12, 13, 14, 15, 15, 15, 16, 17, 18, 19, 23, 24, 25, 25, 25, 26, 27, 28, 29, 30, 30, 31, 31, 31, 32, 33, 37, 38, 39, 39, 39, 40, 41, 41, 41, 42, 43, 44, 45, 45, 46, 46, 46, 47, 48, 49, 50, 50, 51, 51, 51, 52, 53, 11, 11, 54
#include "stdafx.h"
#include "Account.h"

// only use in cpp files not in header
using namespace std;

Account::Account(void) :balance(0) { }

vector<string> Account::Report()
{
	vector<string> report;
	report.push_back("Balance is " + to_string(balance));
	report.push_back("Transactions: ");
	for (auto t : log)
	{
		report.push_back(t.Report());
	}
	report.push_back("--------------------------------");
	return report;
}

bool Account::Deposit(int amt)
{
	if (amt >= 0)
	{
		balance += amt;
		log.push_back(Transaction(amt, "Deposit"));
		return true;
	}
	else
	{
		return true;
	}
}

bool Account::Withdraw(int amt)
{
	if (amt >= 0)
	{
		if (balance >= amt)
		{
			balance -= amt;
			log.push_back(Transaction(amt, "Withdraw"));
		}
		else
		{
			return false;
		}
	}
	else
	{
		return false;
	}
}