52
8, 9, 9, 10, 10, 11, 15, 16, 16, 17, 17, 18, 22, 23, 24, 25, 25, 25, 26, 27, 28, 29, 30, 31, 32, 33, 33, 33, 34, 34, 35, 36, 38, 39, 40, 40, 40, 41, 42, 43, 44, 45, 45, 45, 46, 47, 48, 49, 50, 51, 52, 53
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int n;
char word[2000][10], sorted[2000][10];
//字符比较函数
int cmp_char(const void* _a, const void* _b)
{
	char* a = (char*)_a;
	char* b = (char*)_b;
	return *a - *b;
}
//字符串比较函数
int cmp_string(const void* _a, const void* _b)
{
	char* a = (char*)_a;
	char* b = (char*)_b;
	return strcmp(a, b);
}

int main()
{
	n = 0;
	for(;;)
	{
		scanf("%s", word[n]);
		if(word[n][0] == '*')
			break;
		n++;
	}
	qsort(word, n, sizeof(word[0]), cmp_string);
	for(int i = 0; i < n; i++)
	{
		strcpy(sorted[i], word[i]);
		qsort(sorted[i], strlen(sorted[i]), sizeof(char), cmp_char);
	}

	char s[10];
	while(scanf("%s", s) == 1)
	{
		qsort(s, strlen(s), sizeof(char), cmp_char);
		int found = 0;
		for(int i = 0; i < n; i++)
			if(strcmp(sorted[i], s) == 0)
			{
				found = 1;
				printf("%s ", word[i]);
			}
		if(!found)
			printf(":(");
		printf("\n");
	}
	return 0;
}
