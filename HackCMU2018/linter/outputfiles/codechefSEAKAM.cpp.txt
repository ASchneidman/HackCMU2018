114
3, 4, 4, 5, 6, 7, 7, 8, 9, 10, 14, 15, 16, 17, 17, 17, 17, 18, 19, 20, 20, 21, 24, 24, 25, 25, 27, 28, 28, 29, 31, 32, 33, 34, 34, 35, 35, 37, 37, 37, 37, 37, 38, 39, 40, 42, 42, 42, 42, 44, 44, 44, 44, 44, 45, 46, 46, 46, 46, 47, 48, 49, 50, 51, 52, 53, 53, 53, 53, 53, 54, 55, 55, 56, 58, 59, 60, 60, 62, 62, 67, 68, 69, 69, 70, 71, 74, 74, 74, 75, 76, 79, 82, 84, 84, 84, 84, 85, 85, 85, 88, 88, 89, 91, 92, 92, 94, 96, 96, 97, 98, 100, 40, 24
#include<bits/stdc++.h>
#define mod 1000000007
using namespace std;
long long a[100005],fact[100005];
long long root(long long i)
{
    while(a[i]!=i)
    {
        a[i]=a[a[i]];
        i=a[i];
    }
    return i;
}
void factc(long long n)
{
    fact[1]=1;
    for(long long i=2;i<=n;++i)
    {
        fact[i]=fact[i-1]*i;
        if(fact[i]>=mod)
            fact[i]=fact[i]%mod;
    }
}
vector<pair<long long,long long> > v;
long long has[100005],dishas[100005];
int main()
{
    long long t,n,m;
    scanf("%lld",&t);
    factc(100003);
    while(t--)
    {
        scanf("%lld %lld",&n,&m);
        long long ans=0;
        long long x,y;
        v.clear();
        for(long long i=0;i<m;++i)
        {
            scanf("%lld %lld",&x,&y);
            v.push_back(make_pair(x,y));
        }
        long long c=(1<<m),dis,num=0,p=0,l,r,rl,rr;
        bool flag;
        for(long long x=0;x<c;++x)
        {
            for(long long i=1;i<=n;++i)
                a[i]=i;
            dis=0;
            num=0;
            p=0;
            fill(has,has+n+1,0);
            flag=false;
            for(long long j=0;j<m;++j)
            {
                if(x & (1<<j))
                {
                    num++;
                    l=v[j].first;
                    r=v[j].second;
                    if(has[l]==0)
                        p++;
                    if(has[r]==0)
                        p++;

                    has[l]++;
                    has[r]++;
                    rl=root(l);
                    rr=root(r);
                    if(rl==rr)
                    {
                        flag=true;
                        break;
                    }
                    if(has[l]>=3 or has[r]>=3)
                    {
                        flag=true;
                        break;
                    }
                    a[rl]=rr;
                }
            }
            if(flag)
                continue;
            for(long long i=1;i<=n;++i)
                if(a[i]==i and has[i]!=0)
                    dis++;

            if(dis==n)
                dis=0;

            if(num%2)
                ans=(ans-((1<<dis)*fact[n-p+dis])%mod+mod)%mod;
            else
                ans+=((1<<dis)*fact[n-p+dis]);

            if(ans>=mod)
                ans=ans%mod;

        }
        printf("%lld\n",ans);
    }
    return 0;
}
