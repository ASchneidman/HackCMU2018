255
22, 23, 24, 24, 24, 25, 27, 28, 28, 28, 29, 31, 32, 32, 32, 33, 34, 36, 37, 37, 37, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 50, 50, 51, 53, 54, 55, 56, 58, 59, 61, 62, 62, 62, 63, 65, 66, 67, 68, 70, 71, 72, 74, 75, 75, 75, 76, 77, 79, 80, 80, 80, 81, 82, 84, 85, 85, 85, 86, 87, 89, 90, 90, 90, 91, 92, 94, 95, 95, 95, 96, 97, 99, 100, 100, 100, 101, 102, 104, 105, 105, 105, 106, 107, 109, 110, 110, 110, 111, 112, 114, 115, 115, 115, 116, 117, 119, 120, 120, 120, 121, 122, 124, 125, 125, 125, 126, 127, 129, 130, 130, 130, 131, 133, 134, 135, 136, 138, 139, 140, 142, 143, 143, 143, 144, 146, 147, 148, 149, 151, 152, 153, 155, 156, 156, 156, 157, 159, 160, 161, 162, 164, 165, 166, 168, 169, 169, 169, 170, 172, 173, 174, 175, 177, 178, 180, 181, 181, 181, 182, 184, 185, 186, 187, 189, 190, 192, 193, 193, 193, 194, 196, 197, 198, 199, 201, 202, 204, 205, 205, 205, 206, 208, 209, 210, 211, 213, 214, 216, 217, 217, 217, 218, 220, 221, 222, 223, 225, 226, 228, 229, 229, 229, 230, 232, 233, 234, 235, 237, 238, 240, 241, 241, 241, 242, 244, 245, 246, 247, 249, 250, 252, 253, 253, 253, 254, 256, 257, 258, 259, 261, 262, 264, 265, 265, 265, 266, 268, 269, 270, 271, 273, 274, 275, 49
/*
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with main.c; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor Boston, MA 02110-1301,  USA
 */

#include "SDL4Cpp.h"
#include "SDL4Cpp_image.h"
#include "SDL_image.h"

namespace SDL
{
	Image::Image()
	{
	}

	Image::~Image()
	{
	}

	const SDL_version *Image::Linked_Version()
	{
		return IMG_Linked_Version();
	}

	bool Image::Load(SDL_RWops *src, int freesrc, char *type)
	{
		SDL_Surface *temp = IMG_LoadTyped_RW(src, freesrc, type);

		if(temp == NULL)
			return false;
		else
			m_Surface = temp;

		return true;

	}

	bool Image::Load(std::string file)
	{
		SDL_Surface *temp = IMG_Load(file.c_str());

		if(temp == NULL)
			return false;
		else
			m_Surface = temp;

		return true;
	}

	bool Image::Load(SDL_RWops *src, int freesrc)
	{
		SDL_Surface *temp = IMG_Load_RW(src, freesrc);

		if(temp == NULL)
			return false;
		else
			m_Surface = temp;

		return true;

	}

	int Image::InvertAlpha(int on)
	{
		return IMG_InvertAlpha(on);
	}

	bool Image::isBMP(SDL_RWops *src)
	{
		return IMG_isBMP(src);
	}

	bool Image::isPNM(SDL_RWops *src)
	{
		return IMG_isPNM(src);
	}

	bool Image::isXPM(SDL_RWops *src)
	{
		return IMG_isXPM(src);
	}

	bool Image::isXCF(SDL_RWops *src)
	{
		return IMG_isXCF(src);
	}

	bool Image::isPCX(SDL_RWops *src)
	{
		return IMG_isPCX(src);
	}

	bool Image::isGIF(SDL_RWops *src)
	{
		return IMG_isGIF(src);
	}

	bool Image::isJPG(SDL_RWops *src)
	{
		return IMG_isJPG(src);
	}

	bool Image::isTIF(SDL_RWops *src)
	{
		return IMG_isTIF(src);
	}

	bool Image::isPNG(SDL_RWops *src)
	{
		return IMG_isPNG(src);
	}

	bool Image::isLBM(SDL_RWops *src)
	{
		return IMG_isLBM(src);
	}

	bool Image::LoadBMP_RW(SDL_RWops *src)
	{
		SDL_Surface *temp = IMG_LoadBMP_RW(src);

		if(temp == NULL)
			return false;
		else
			m_Surface = temp;

		return true;

	}

	bool Image::LoadPNM_RW(SDL_RWops *src)
	{
		SDL_Surface *temp = IMG_LoadPNM_RW(src);

		if(temp == NULL)
			return false;
		else
			m_Surface = temp;

		return true;

	}

	bool Image::LoadXPM_RW(SDL_RWops *src)
	{
		SDL_Surface *temp = IMG_LoadXPM_RW(src);

		if(temp == NULL)
			return false;
		else
			m_Surface = temp;

		return true;

	}

	bool Image::LoadXCF_RW(SDL_RWops *src)
	{
		SDL_Surface *temp = IMG_LoadXCF_RW(src);

		if(temp == NULL)
			return false;
		else
			m_Surface = temp;

		return true;
	}

	bool Image::LoadPCX_RW(SDL_RWops *src)
	{
		SDL_Surface *temp = IMG_LoadPCX_RW(src);

		if(temp == NULL)
			return false;
		else
			m_Surface = temp;

		return true;
	}

	bool Image::LoadGIF_RW(SDL_RWops *src)
	{
		SDL_Surface *temp = IMG_LoadGIF_RW(src);

		if(temp == NULL)
			return false;
		else
			m_Surface = temp;

		return true;
	}

	bool Image::LoadJPG_RW(SDL_RWops *src)
	{
		SDL_Surface *temp = IMG_LoadJPG_RW(src);

		if(temp == NULL)
			return false;
		else
			m_Surface = temp;

		return true;
	}

	bool Image::LoadTIF_RW(SDL_RWops *src)
	{
		SDL_Surface *temp = IMG_LoadTIF_RW(src);

		if(temp == NULL)
			return false;
		else
			m_Surface = temp;

		return true;
	}

	bool Image::LoadPNG_RW(SDL_RWops *src)
	{
		SDL_Surface *temp = IMG_LoadPNG_RW(src);

		if(temp == NULL)
			return false;
		else
			m_Surface = temp;

		return true;
	}

	bool Image::LoadTGA_RW(SDL_RWops *src)
	{
		SDL_Surface *temp = IMG_LoadTGA_RW(src);

		if(temp == NULL)
			return false;
		else
			m_Surface = temp;

		return true;
	}

	bool Image::LoadLBM_RW(SDL_RWops *src)
	{
		SDL_Surface *temp = IMG_LoadLBM_RW(src);

		if(temp == NULL)
			return false;
		else
			m_Surface = temp;

		return true;
	}

	bool Image::ReadXPMFromArray(char **xpm)
	{
		SDL_Surface *temp = IMG_ReadXPMFromArray(xpm);

		if(temp == NULL)
			return false;
		else
			m_Surface = temp;

		return true;
	}
}

